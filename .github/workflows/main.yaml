name: Azure CI/CD for Consignment Shipping Price Prediction

on:
  push:
    branches:
      - master

jobs:
  build-and-push-azure-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ACR_REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.ACR_REGISTRY_USERNAME }}
          password: ${{ secrets.ACR_REGISTRY_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.ACR_REGISTRY_LOGIN_SERVER }}/shipping_prediction:latest .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.ACR_REGISTRY_LOGIN_SERVER }}/shipping_prediction:latest

  deploy-to-azure:
    name: Deploy to Azure Web App
    runs-on: ubuntu-latest
    needs: build-and-push-azure-image
    steps:
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Debug Secrets
        run: |
          echo "ACR_REGISTRY_USERNAME: ${{ secrets.ACR_REGISTRY_USERNAME }}"
          echo "ACR_REGISTRY_PASSWORD: ${{ secrets.ACR_REGISTRY_PASSWORD }}"
          echo "AZURE_WEBAPP_NAME: ${{ secrets.AZURE_WEBAPP_NAME }}"
          echo "AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}"
          echo "AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}" 

      - name: Azure CLI Login
        run: az login

      - name: Set Azure Subscription
        run: az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Log in to Azure Container Registry
        run: docker login ${{ secrets.ACR_REGISTRY_LOGIN_SERVER }} -u ${{ secrets.ACR_REGISTRY_USERNAME }} -p ${{ secrets.ACR_REGISTRY_PASSWORD }}

      - name: Pull Docker image
        run: docker pull ${{ secrets.ACR_REGISTRY_LOGIN_SERVER }}/shipping_prediction:latest

      - name: Deploy Docker Compose
        run: |
          export IMAGE_NAME="${{ secrets.ACR_REGISTRY_LOGIN_SERVER }}/shipping_prediction:latest"
          docker-compose -f docker-compose.yaml up -d

      - name: Docker System Prune to Remove Old Images
        run: docker system prune -f

      - name: Get Azure Web App URL
        id: webapp-url
        run: |
          az webapp show --name ${{ secrets.AZURE_WEBAPP_NAME }} --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --query defaultHostName --output tsv
        env:
          AZURE_WEBAPP_NAME: ${{ secrets.AZURE_WEBAPP_NAME }}
          AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}

      - name: Display Azure Web App URL
        run: |
          echo "Azure Web App URL: https://${{ secrets.AZURE_WEBAPP_NAME }}.azurewebsites.net"
        env:
          AZURE_WEBAPP_NAME: ${{ secrets.AZURE_WEBAPP_NAME }}
